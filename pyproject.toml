[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "siliconai-validator"
dynamic = ["version"]
description = "SiliconAI companion package for ACTS-based validation"
authors = [{ name = "Tadej Novak", email = "tadej.novak@cern.ch" }]
requires-python = ">= 3.12"
readme = "README.md"
license = { text = "MPL-2.0" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "matplotlib == 3.10.*",
    "mplhep == 0.4.*",
    "numpy == 2.3.*",
    "pandas == 2.3.*",
    "particle == 0.25.*",
    "scikit-hep-testdata == 0.5.*",
    "scipy == 1.16.*",
    "tables == 3.10.*",
    "tomli-w",
    "typer-slim[standard] == 0.16.*",
    "uproot == 5.6.*",
]

[dependency-groups]
dev = [
    "coverage[toml]",
    "ipykernel",
    "ipympl",
    "mypy == 1.17.1",
    "pandas-stubs == 2.3.*",
    "pre-commit-hooks == 5.0.*",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-forked",
    "ruff == 0.12.7",
]

[project.scripts]
siliconai_validator = "siliconai_validator.cli:application"

[tool.hatch.version]
path = "src/siliconai_validator/__init__.py"

[tool.coverage.run]
branch = true
source = ["src/siliconai_validator"]

[tool.coverage.report]
precision = 2
include_namespace_packages = true
exclude_lines = [
    "pragma: no cover",
    "if self.debug:",
    "if debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "__repr__",
]
ignore_errors = true

[tool.ruff]
src = ["src"]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "F",    # pyflakes
    "E",    # pycodestyle
    "W",    # pycodestyle
    "C90",  # mccabe (complexity)
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "S",    # flakey-bandit
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "EM",   # flake8-errmsg
    "EXE",  # flake8-executable
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TC",   # flake8-type-checking
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PD",   # pandas-vet
    "PL",   # pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "NPY",  # numpy
    "PERF", # perflint
    "FURB", # refurb
    "DOC",  # pydoclint
    "RUF",  # ruff
]
ignore = [
    "D203",    # one-blank-line-before-class (conflicting with no-blank-line-before-class)
    "D213",    # multi-line-summary-second-line (conflicting with multi-line-summary-first-line)
    "FBT001",  # boolean-positional-arg-in-function-definition (not wanted)
    "FBT002",  # boolean-default-value-in-function-definition (not wanted)
    "N812",    # lowercase-imported-as-non-lowercase (not wanted)
    "PLC0415", # import-outside-top-level (not wanted)
    "S301",    # suspicious-pickle-usage (not wanted)
]
pylint = { max-args = 15 }

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["S101"]

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["acts.*", "awkward.*", "IPython.*", "mplhep.*", "uproot.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ignore=src/siliconai_validator/tests/ --cov=siliconai_validator --cov-report=term-missing:skip-covered --cov-report xml --cov-report html:coverage"
testpaths = ["tests"]
